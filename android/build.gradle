package android

group = "co.reader.yaqut_reader_flutter"
version = "1.0"

buildscript {
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath("com.android.tools.build:gradle:7.3.0")
    }
}

rootProject.allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

apply plugin: "com.android.library"

android {
    if (project.android.hasProperty("namespace")) {
        namespace = "co.reader.yaqut_reader_flutter"
    }

    compileSdk = 34

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdk = 21
    }

    dependencies {
        testImplementation("junit:junit:4.13.2")
        testImplementation("org.mockito:mockito-core:5.0.0")
        implementation files('lib/reader.aar')
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.22"
        implementation 'androidx.core:core-ktx:1.13.1'
        implementation 'androidx.appcompat:appcompat:1.6.1'
        implementation 'com.google.android.material:material:1.12.0'
        implementation 'com.github.skydoves:expandablelayout:1.0.7'
        implementation 'com.squareup.picasso:picasso:2.71828'
        implementation 'jp.wasabeef:picasso-transformations:2.4.0'
        implementation 'org.greenrobot:eventbus:3.3.1'
        implementation 'com.google.android.exoplayer:exoplayer:2.19.1'
        implementation 'com.google.code.gson:gson:2.8.6'

        def multidex_version = "2.0.1"
        implementation "androidx.multidex:multidex:$multidex_version"
    }

    testOptions {
        unitTests.all {
            testLogging {
               events "passed", "skipped", "failed", "standardOut", "standardError"
               outputs.upToDateWhen {false}
               showStandardStreams = true
            }
        }
    }
}
